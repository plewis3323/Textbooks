(()=>{var k=e=>{let l=e.headers.get("x-bearer-auth");return l&&(window.Overleaf.token=l),Promise.resolve(e)},F=e=>e.status>=200&&e.status<303?e.status===204?Promise.resolve({ok:e.ok,status:e.status,statusText:e.statusText}):Promise.resolve(e.json()):e.json().then(l=>Promise.reject({ok:e.ok,status:e.status,reason:e.statusText,body:l.errors})),n={GET:"GET",POST:"POST",PUT:"PUT",DELETE:"DELETE"},V=e=>{let l=!1;return{promise:new Promise((s,c)=>{e.then(r=>l?c({isCanceled:!0}):s(r)),e.catch(r=>c(l?{isCanceled:!0}:r))}),cancel(){l=!0}}},R=e=>()=>fetch(e.urls.auth(window.Overleaf.sessionId),{method:n.POST}).then(F).then(l=>{window.Overleaf.token=l.token}),d=e=>{let l=(t,s,c)=>{let r={Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${window.Overleaf.token}`};return window.Overleaf.accessToken&&(r.Authorization=`Token ${window.Overleaf.accessToken}`),fetch(s,{method:t,headers:r,body:JSON.stringify(c)}).then(k).then(F).then(U=>Promise.resolve(U))};return(t,s,c)=>l(t,s,c).catch(r=>r.status===401?window.Overleaf.init().then(R(e)).then(()=>Promise.resolve(l(t,s,c))):Promise.reject(r))};var i=e=>e.data.sessionId||e.data.user.sessionId,S=e=>e.ok||e.isSuccess&&e.isSuccess(),o=e=>{let l;return{init:t=>(t=t||{cancelable:!1},l=l||new Promise((s,c)=>{if(t.sessionId||t.accessToken)Overleaf.sessionId=t.sessionId,Overleaf.accessToken=t.accessToken,l=null,s();else if(Overleaf.sessionId||Overleaf.accessToken)l=null,s();else if(window.Jigsaw){let r=U=>{S(U)?(Overleaf.sessionId=i(U),R(e)().then(()=>s()).catch(()=>s()).then(()=>l=null)):c()};Jigsaw.User.getInfo.isProxy?Jigsaw.User.getInfo().then(r).catch(c):Jigsaw.User.getInfo(r)}else c()})),makeCancelable:V,Decks:{all:t=>{let s=e.urls.decks();if(t){let c=Object.keys(t).map(r=>`metadata[${r}]=${t[r]}`).join("&");s=s+`?${c}`}return d(e)(n.GET,s)},one:t=>d(e)(n.GET,e.urls.decks(t)),create:t=>d(e)(n.POST,e.urls.decks(),{deck:t}),update:(t,s)=>d(e)(n.PUT,e.urls.decks(t),{deck:s}),delete:t=>d(e)(n.DELETE,e.urls.decks(t)),duplicate:(t,s)=>d(e)(n.POST,e.urls.decks(t)+"/duplicate",{deck:s})},Cards:{one:(t,s)=>d(e)(n.GET,e.urls.cards(t,s)),create:(t,s)=>d(e)(n.POST,e.urls.cards(t),{card:s}),update:(t,s,c)=>d(e)(n.PUT,e.urls.cards(t,s),{card:c}),delete:(t,s)=>d(e)(n.DELETE,e.urls.cards(t,s))},Proficiencies:{create:(t,s,c)=>Array.isArray(c)?d(e)(n.POST,e.urls.proficiencies(t,s),{proficiencies:c}):d(e)(n.POST,e.urls.proficiencies(t,s),{proficiency:c})}}};var T="https://flashcards.vitalsource.com";var a={env:{host:`${T}/v2`},urls:{auth:e=>`${a.env.host}/auth/${e}`,decks:(e="")=>`${a.env.host}/decks${e?`/${e}`:""}`,cards:(e,l="")=>`${a.urls.decks(e)}/cards/${l}`,proficiencies:(e,l)=>`${a.urls.cards(e,l)}/proficiencies`}},N=o(a);window.Overleaf=N;})();
