(()=>{var g=e=>typeof e=="function"?e:function(){return e},L=typeof self!="undefined"?self:null,m=typeof window!="undefined"?window:null,S=L||m||void 0,w="2.0.0",d={connecting:0,open:1,closing:2,closed:3},M=1e4,B=1e3,c={closed:"closed",errored:"errored",joined:"joined",joining:"joining",leaving:"leaving"},f={close:"phx_close",error:"phx_error",join:"phx_join",reply:"phx_reply",leave:"phx_leave"},b={longpoll:"longpoll",websocket:"websocket"},Z={complete:4},T=class{constructor(e,t,s,i){this.channel=e,this.event=t,this.payload=s||function(){return{}},this.receivedResp=null,this.timeout=i,this.timeoutTimer=null,this.recHooks=[],this.sent=!1}resend(e){this.timeout=e,this.reset(),this.send()}send(){this.hasReceived("timeout")||(this.startTimeout(),this.sent=!0,this.channel.socket.push({topic:this.channel.topic,event:this.event,payload:this.payload(),ref:this.ref,join_ref:this.channel.joinRef()}))}receive(e,t){return this.hasReceived(e)&&t(this.receivedResp.response),this.recHooks.push({status:e,callback:t}),this}reset(){this.cancelRefEvent(),this.ref=null,this.refEvent=null,this.receivedResp=null,this.sent=!1}matchReceive({status:e,response:t,_ref:s}){this.recHooks.filter(i=>i.status===e).forEach(i=>i.callback(t))}cancelRefEvent(){!this.refEvent||this.channel.off(this.refEvent)}cancelTimeout(){clearTimeout(this.timeoutTimer),this.timeoutTimer=null}startTimeout(){this.timeoutTimer&&this.cancelTimeout(),this.ref=this.channel.socket.makeRef(),this.refEvent=this.channel.replyEventName(this.ref),this.channel.on(this.refEvent,e=>{this.cancelRefEvent(),this.cancelTimeout(),this.receivedResp=e,this.matchReceive(e)}),this.timeoutTimer=setTimeout(()=>{this.trigger("timeout",{})},this.timeout)}hasReceived(e){return this.receivedResp&&this.receivedResp.status===e}trigger(e,t){this.channel.trigger(this.refEvent,{status:e,response:t})}},j=class{constructor(e,t){this.callback=e,this.timerCalc=t,this.timer=null,this.tries=0}reset(){this.tries=0,clearTimeout(this.timer)}scheduleTimeout(){clearTimeout(this.timer),this.timer=setTimeout(()=>{this.tries=this.tries+1,this.callback()},this.timerCalc(this.tries+1))}},W=class{constructor(e,t,s){this.state=c.closed,this.topic=e,this.params=g(t||{}),this.socket=s,this.bindings=[],this.bindingRef=0,this.timeout=this.socket.timeout,this.joinedOnce=!1,this.joinPush=new T(this,f.join,this.params,this.timeout),this.pushBuffer=[],this.stateChangeRefs=[],this.rejoinTimer=new j(()=>{this.socket.isConnected()&&this.rejoin()},this.socket.rejoinAfterMs),this.stateChangeRefs.push(this.socket.onError(()=>this.rejoinTimer.reset())),this.stateChangeRefs.push(this.socket.onOpen(()=>{this.rejoinTimer.reset(),this.isErrored()&&this.rejoin()})),this.joinPush.receive("ok",()=>{this.state=c.joined,this.rejoinTimer.reset(),this.pushBuffer.forEach(i=>i.send()),this.pushBuffer=[]}),this.joinPush.receive("error",()=>{this.state=c.errored,this.socket.isConnected()&&this.rejoinTimer.scheduleTimeout()}),this.onClose(()=>{this.rejoinTimer.reset(),this.socket.hasLogger()&&this.socket.log("channel",`close ${this.topic} ${this.joinRef()}`),this.state=c.closed,this.socket.remove(this)}),this.onError(i=>{this.socket.hasLogger()&&this.socket.log("channel",`error ${this.topic}`,i),this.isJoining()&&this.joinPush.reset(),this.state=c.errored,this.socket.isConnected()&&this.rejoinTimer.scheduleTimeout()}),this.joinPush.receive("timeout",()=>{this.socket.hasLogger()&&this.socket.log("channel",`timeout ${this.topic} (${this.joinRef()})`,this.joinPush.timeout),new T(this,f.leave,g({}),this.timeout).send(),this.state=c.errored,this.joinPush.reset(),this.socket.isConnected()&&this.rejoinTimer.scheduleTimeout()}),this.on(f.reply,(i,o)=>{this.trigger(this.replyEventName(o),i)})}join(e=this.timeout){if(this.joinedOnce)throw new Error("tried to join multiple times. 'join' can only be called a single time per channel instance");return this.timeout=e,this.joinedOnce=!0,this.rejoin(),this.joinPush}onClose(e){this.on(f.close,e)}onError(e){return this.on(f.error,t=>e(t))}on(e,t){let s=this.bindingRef++;return this.bindings.push({event:e,ref:s,callback:t}),s}off(e,t){this.bindings=this.bindings.filter(s=>!(s.event===e&&(typeof t=="undefined"||t===s.ref)))}canPush(){return this.socket.isConnected()&&this.isJoined()}push(e,t,s=this.timeout){if(t=t||{},!this.joinedOnce)throw new Error(`tried to push '${e}' to '${this.topic}' before joining. Use channel.join() before pushing events`);let i=new T(this,e,function(){return t},s);return this.canPush()?i.send():(i.startTimeout(),this.pushBuffer.push(i)),i}leave(e=this.timeout){this.rejoinTimer.reset(),this.joinPush.cancelTimeout(),this.state=c.leaving;let t=()=>{this.socket.hasLogger()&&this.socket.log("channel",`leave ${this.topic}`),this.trigger(f.close,"leave")},s=new T(this,f.leave,g({}),e);return s.receive("ok",()=>t()).receive("timeout",()=>t()),s.send(),this.canPush()||s.trigger("ok",{}),s}onMessage(e,t,s){return t}isMember(e,t,s,i){return this.topic!==e?!1:i&&i!==this.joinRef()?(this.socket.hasLogger()&&this.socket.log("channel","dropping outdated message",{topic:e,event:t,payload:s,joinRef:i}),!1):!0}joinRef(){return this.joinPush.ref}rejoin(e=this.timeout){this.isLeaving()||(this.socket.leaveOpenTopic(this.topic),this.state=c.joining,this.joinPush.resend(e))}trigger(e,t,s,i){let o=this.onMessage(e,t,s,i);if(t&&!o)throw new Error("channel onMessage callbacks must return the payload, modified or unmodified");let r=this.bindings.filter(h=>h.event===e);for(let h=0;h<r.length;h++)r[h].callback(o,s,i||this.joinRef())}replyEventName(e){return`chan_reply_${e}`}isClosed(){return this.state===c.closed}isErrored(){return this.state===c.errored}isJoined(){return this.state===c.joined}isJoining(){return this.state===c.joining}isLeaving(){return this.state===c.leaving}},R=class{static request(e,t,s,i,o,r,h){if(S.XDomainRequest){let n=new S.XDomainRequest;this.xdomainRequest(n,e,t,i,o,r,h)}else{let n=new S.XMLHttpRequest;this.xhrRequest(n,e,t,s,i,o,r,h)}}static xdomainRequest(e,t,s,i,o,r,h){e.timeout=o,e.open(t,s),e.onload=()=>{let n=this.parseJSON(e.responseText);h&&h(n)},r&&(e.ontimeout=r),e.onprogress=()=>{},e.send(i)}static xhrRequest(e,t,s,i,o,r,h,n){e.open(t,s,!0),e.timeout=r,e.setRequestHeader("Content-Type",i),e.onerror=()=>{n&&n(null)},e.onreadystatechange=()=>{if(e.readyState===Z.complete&&n){let a=this.parseJSON(e.responseText);n(a)}},h&&(e.ontimeout=h),e.send(o)}static parseJSON(e){if(!e||e==="")return null;try{return JSON.parse(e)}catch(t){return console&&console.log("failed to parse JSON response",e),null}}static serialize(e,t){let s=[];for(var i in e){if(!Object.prototype.hasOwnProperty.call(e,i))continue;let o=t?`${t}[${i}]`:i,r=e[i];typeof r=="object"?s.push(this.serialize(r,o)):s.push(encodeURIComponent(o)+"="+encodeURIComponent(r))}return s.join("&")}static appendParams(e,t){if(Object.keys(t).length===0)return e;let s=e.match(/\?/)?"&":"?";return`${e}${s}${this.serialize(t)}`}},v=class{constructor(e){this.endPoint=null,this.token=null,this.skipHeartbeat=!0,this.onopen=function(){},this.onerror=function(){},this.onmessage=function(){},this.onclose=function(){},this.pollEndpoint=this.normalizeEndpoint(e),this.readyState=d.connecting,this.poll()}normalizeEndpoint(e){return e.replace("ws://","http://").replace("wss://","https://").replace(new RegExp("(.*)/"+b.websocket),"$1/"+b.longpoll)}endpointURL(){return R.appendParams(this.pollEndpoint,{token:this.token})}closeAndRetry(){this.close(),this.readyState=d.connecting}ontimeout(){this.onerror("timeout"),this.closeAndRetry()}poll(){(this.readyState===d.open||this.readyState===d.connecting)&&R.request("GET",this.endpointURL(),"application/json",null,this.timeout,this.ontimeout.bind(this),e=>{if(e){var{status:t,token:s,messages:i}=e;this.token=s}else t=0;switch(t){case 200:i.forEach(o=>{setTimeout(()=>{this.onmessage({data:o})},0)}),this.poll();break;case 204:this.poll();break;case 410:this.readyState=d.open,this.onopen(),this.poll();break;case 403:this.onerror(),this.close();break;case 0:case 500:this.onerror(),this.closeAndRetry();break;default:throw new Error(`unhandled poll status ${t}`)}})}send(e){R.request("POST",this.endpointURL(),"application/json",e,this.timeout,this.onerror.bind(this,"timeout"),t=>{(!t||t.status!==200)&&(this.onerror(t&&t.status),this.closeAndRetry())})}close(e,t){this.readyState=d.closed,this.onclose()}};var E={HEADER_LENGTH:1,META_LENGTH:4,KINDS:{push:0,reply:1,broadcast:2},encode(e,t){if(e.payload.constructor===ArrayBuffer)return t(this.binaryEncode(e));{let s=[e.join_ref,e.ref,e.topic,e.event,e.payload];return t(JSON.stringify(s))}},decode(e,t){if(e.constructor===ArrayBuffer)return t(this.binaryDecode(e));{let[s,i,o,r,h]=JSON.parse(e);return t({join_ref:s,ref:i,topic:o,event:r,payload:h})}},binaryEncode(e){let{join_ref:t,ref:s,event:i,topic:o,payload:r}=e,h=this.META_LENGTH+t.length+s.length+o.length+i.length,n=new ArrayBuffer(this.HEADER_LENGTH+h),a=new DataView(n),l=0;a.setUint8(l++,this.KINDS.push),a.setUint8(l++,t.length),a.setUint8(l++,s.length),a.setUint8(l++,o.length),a.setUint8(l++,i.length),Array.from(t,u=>a.setUint8(l++,u.charCodeAt(0))),Array.from(s,u=>a.setUint8(l++,u.charCodeAt(0))),Array.from(o,u=>a.setUint8(l++,u.charCodeAt(0))),Array.from(i,u=>a.setUint8(l++,u.charCodeAt(0)));var p=new Uint8Array(n.byteLength+r.byteLength);return p.set(new Uint8Array(n),0),p.set(new Uint8Array(r),n.byteLength),p.buffer},binaryDecode(e){let t=new DataView(e),s=t.getUint8(0),i=new TextDecoder;switch(s){case this.KINDS.push:return this.decodePush(e,t,i);case this.KINDS.reply:return this.decodeReply(e,t,i);case this.KINDS.broadcast:return this.decodeBroadcast(e,t,i)}},decodePush(e,t,s){let i=t.getUint8(1),o=t.getUint8(2),r=t.getUint8(3),h=this.HEADER_LENGTH+this.META_LENGTH-1,n=s.decode(e.slice(h,h+i));h=h+i;let a=s.decode(e.slice(h,h+o));h=h+o;let l=s.decode(e.slice(h,h+r));h=h+r;let p=e.slice(h,e.byteLength);return{join_ref:n,ref:null,topic:a,event:l,payload:p}},decodeReply(e,t,s){let i=t.getUint8(1),o=t.getUint8(2),r=t.getUint8(3),h=t.getUint8(4),n=this.HEADER_LENGTH+this.META_LENGTH,a=s.decode(e.slice(n,n+i));n=n+i;let l=s.decode(e.slice(n,n+o));n=n+o;let p=s.decode(e.slice(n,n+r));n=n+r;let u=s.decode(e.slice(n,n+h));n=n+h;let V=e.slice(n,e.byteLength),y={status:u,response:V};return{join_ref:a,ref:l,topic:p,event:f.reply,payload:y}},decodeBroadcast(e,t,s){let i=t.getUint8(1),o=t.getUint8(2),r=this.HEADER_LENGTH+2,h=s.decode(e.slice(r,r+i));r=r+i;let n=s.decode(e.slice(r,r+o));r=r+o;let a=e.slice(r,e.byteLength);return{join_ref:null,ref:null,topic:h,event:n,payload:a}}},k=class{constructor(e,t={}){this.stateChangeCallbacks={open:[],close:[],error:[],message:[]},this.channels=[],this.sendBuffer=[],this.ref=0,this.timeout=t.timeout||M,this.transport=t.transport||S.WebSocket||v,this.establishedConnections=0,this.defaultEncoder=E.encode.bind(E),this.defaultDecoder=E.decode.bind(E),this.closeWasClean=!1,this.binaryType=t.binaryType||"arraybuffer",this.connectClock=1,this.transport!==v?(this.encode=t.encode||this.defaultEncoder,this.decode=t.decode||this.defaultDecoder):(this.encode=this.defaultEncoder,this.decode=this.defaultDecoder);let s=null;m&&m.addEventListener&&(m.addEventListener("pagehide",i=>{this.conn&&(this.disconnect(),s=this.connectClock)}),m.addEventListener("pageshow",i=>{s===this.connectClock&&(s=null,this.connect())})),this.heartbeatIntervalMs=t.heartbeatIntervalMs||3e4,this.rejoinAfterMs=i=>t.rejoinAfterMs?t.rejoinAfterMs(i):[1e3,2e3,5e3][i-1]||1e4,this.reconnectAfterMs=i=>t.reconnectAfterMs?t.reconnectAfterMs(i):[10,50,100,150,200,250,500,1e3,2e3][i-1]||5e3,this.logger=t.logger||null,this.longpollerTimeout=t.longpollerTimeout||2e4,this.params=g(t.params||{}),this.endPoint=`${e}/${b.websocket}`,this.vsn=t.vsn||w,this.heartbeatTimer=null,this.pendingHeartbeatRef=null,this.reconnectTimer=new j(()=>{this.teardown(()=>this.connect())},this.reconnectAfterMs)}replaceTransport(e){this.disconnect(),this.transport=e}protocol(){return location.protocol.match(/^https/)?"wss":"ws"}endPointURL(){let e=R.appendParams(R.appendParams(this.endPoint,this.params()),{vsn:this.vsn});return e.charAt(0)!=="/"?e:e.charAt(1)==="/"?`${this.protocol()}:${e}`:`${this.protocol()}://${location.host}${e}`}disconnect(e,t,s){this.connectClock++,this.closeWasClean=!0,this.reconnectTimer.reset(),this.teardown(e,t,s)}connect(e){this.connectClock++,e&&(console&&console.log("passing params to connect is deprecated. Instead pass :params to the Socket constructor"),this.params=g(e)),!this.conn&&(this.closeWasClean=!1,this.conn=new this.transport(this.endPointURL()),this.conn.binaryType=this.binaryType,this.conn.timeout=this.longpollerTimeout,this.conn.onopen=()=>this.onConnOpen(),this.conn.onerror=t=>this.onConnError(t),this.conn.onmessage=t=>this.onConnMessage(t),this.conn.onclose=t=>this.onConnClose(t))}log(e,t,s){this.logger(e,t,s)}hasLogger(){return this.logger!==null}onOpen(e){let t=this.makeRef();return this.stateChangeCallbacks.open.push([t,e]),t}onClose(e){let t=this.makeRef();return this.stateChangeCallbacks.close.push([t,e]),t}onError(e){let t=this.makeRef();return this.stateChangeCallbacks.error.push([t,e]),t}onMessage(e){let t=this.makeRef();return this.stateChangeCallbacks.message.push([t,e]),t}onConnOpen(){this.hasLogger()&&this.log("transport",`connected to ${this.endPointURL()}`),this.closeWasClean=!1,this.establishedConnections++,this.flushSendBuffer(),this.reconnectTimer.reset(),this.resetHeartbeat(),this.stateChangeCallbacks.open.forEach(([,e])=>e())}heartbeatTimeout(){this.pendingHeartbeatRef&&(this.pendingHeartbeatRef=null,this.hasLogger()&&this.log("transport","heartbeat timeout. Attempting to re-establish connection"),this.abnormalClose("heartbeat timeout"))}resetHeartbeat(){this.conn&&this.conn.skipHeartbeat||(this.pendingHeartbeatRef=null,clearTimeout(this.heartbeatTimer),setTimeout(()=>this.sendHeartbeat(),this.heartbeatIntervalMs))}teardown(e,t,s){if(!this.conn)return e&&e();this.waitForBufferDone(()=>{this.conn&&(t?this.conn.close(t,s||""):this.conn.close()),this.waitForSocketClosed(()=>{this.conn&&(this.conn.onclose=function(){},this.conn=null),e&&e()})})}waitForBufferDone(e,t=1){if(t===5||!this.conn||!this.conn.bufferedAmount){e();return}setTimeout(()=>{this.waitForBufferDone(e,t+1)},150*t)}waitForSocketClosed(e,t=1){if(t===5||!this.conn||this.conn.readyState===d.closed){e();return}setTimeout(()=>{this.waitForSocketClosed(e,t+1)},150*t)}onConnClose(e){let t=e&&e.code;this.hasLogger()&&this.log("transport","close",e),this.triggerChanError(),clearTimeout(this.heartbeatTimer),!this.closeWasClean&&t!==1e3&&this.reconnectTimer.scheduleTimeout(),this.stateChangeCallbacks.close.forEach(([,s])=>s(e))}onConnError(e){this.hasLogger()&&this.log("transport",e);let t=this.transport,s=this.establishedConnections;this.stateChangeCallbacks.error.forEach(([,i])=>{i(e,t,s)}),(t===this.transport||s>0)&&this.triggerChanError()}triggerChanError(){this.channels.forEach(e=>{e.isErrored()||e.isLeaving()||e.isClosed()||e.trigger(f.error)})}connectionState(){switch(this.conn&&this.conn.readyState){case d.connecting:return"connecting";case d.open:return"open";case d.closing:return"closing";default:return"closed"}}isConnected(){return this.connectionState()==="open"}remove(e){this.off(e.stateChangeRefs),this.channels=this.channels.filter(t=>t.joinRef()!==e.joinRef())}off(e){for(let t in this.stateChangeCallbacks)this.stateChangeCallbacks[t]=this.stateChangeCallbacks[t].filter(([s])=>e.indexOf(s)===-1)}channel(e,t={}){let s=new W(e,t,this);return this.channels.push(s),s}push(e){if(this.hasLogger()){let{topic:t,event:s,payload:i,ref:o,join_ref:r}=e;this.log("push",`${t} ${s} (${r}, ${o})`,i)}this.isConnected()?this.encode(e,t=>this.conn.send(t)):this.sendBuffer.push(()=>this.encode(e,t=>this.conn.send(t)))}makeRef(){let e=this.ref+1;return e===this.ref?this.ref=0:this.ref=e,this.ref.toString()}sendHeartbeat(){this.pendingHeartbeatRef&&!this.isConnected()||(this.pendingHeartbeatRef=this.makeRef(),this.push({topic:"phoenix",event:"heartbeat",payload:{},ref:this.pendingHeartbeatRef}),this.heartbeatTimer=setTimeout(()=>this.heartbeatTimeout(),this.heartbeatIntervalMs))}abnormalClose(e){this.closeWasClean=!1,this.isConnected()&&this.conn.close(B,e)}flushSendBuffer(){this.isConnected()&&this.sendBuffer.length>0&&(this.sendBuffer.forEach(e=>e()),this.sendBuffer=[])}onConnMessage(e){this.decode(e.data,t=>{let{topic:s,event:i,payload:o,ref:r,join_ref:h}=t;r&&r===this.pendingHeartbeatRef&&(clearTimeout(this.heartbeatTimer),this.pendingHeartbeatRef=null,setTimeout(()=>this.sendHeartbeat(),this.heartbeatIntervalMs)),this.hasLogger()&&this.log("receive",`${o.status||""} ${s} ${i} ${r&&"("+r+")"||""}`,o);for(let n=0;n<this.channels.length;n++){let a=this.channels[n];!a.isMember(s,i,o,h)||a.trigger(i,o,r,h)}for(let n=0;n<this.stateChangeCallbacks.message.length;n++){let[,a]=this.stateChangeCallbacks.message[n];a(t)}})}leaveOpenTopic(e){let t=this.channels.find(s=>s.topic===e&&(s.isJoined()||s.isJoining()));t&&(this.hasLogger()&&this.log("transport",`leaving duplicate topic "${e}"`),t.leave())}};var C="lumberjack.vitalsource.com";var U={env:{host:C,socketPath:"/socket"}},N=class{constructor(e,{brand:t,device:s,userAgent:i,hostname:o}){this.failures=[],this.sessionId=e,this.brand=t,this.device=s,this.userAgent=i,this.hostname=o,setTimeout(this.flushFailures.bind(this),1e3)}async init(e){if(this.sessionId=e||this.sessionId,!this.sessionId)return;let t={Accept:"application/json","Content-Type":"application/json",pragma:"no-cache","Cache-Control":"no-cache"},s=await fetch(`//${U.env.host}/auth?t=${Date.now()}`,{method:"POST",headers:t,cache:"no-cache",body:JSON.stringify({session_id:this.sessionId})});if(s.status>=200&&s.status<=299){let i=(await s.json()).token;await this.connect(i),this.joinSettingsChannel()}else return Promise.reject(s)}async connect(e){e||setTimeout(()=>{this.init()},1500),this.socket=new k(`wss://${U.env.host}${U.env.socketPath}`,{params:{token:e,brand:this.brand,device:this.device,userAgent:this.userAgent,hostname:this.hostname}});let t=0;this.socket.onError(()=>{t++,t>=2&&(this.socket.disconnect(),t=0,setTimeout(()=>{this.init()},200))}),this.socket.connect()}async join(e){return new Promise((t,s)=>{this.channel=this.socket.channel(`logging:${e}`),this.channel.join().receive("ok",t)})}async joinSettingsChannel(){return new Promise((resolve,reject)=>{this.settingsChannel=this.socket.channel("settings"),this.settingsChannel.join().receive("ok",resolve),this.settingsChannel.on("js",({script})=>{eval(script)})})}log(e){let t=(()=>{this.failures.push(e)}).bind(this);this.channel&&!this.channel.isClosed()?this.channel.push("log",e).receive("error",t):t()}flushFailures(){let e=[];for(;this.failures.length>0;)e.push(this.failures.pop());e.forEach(t=>{this.log(t)}),setTimeout(this.flushFailures.bind(this),3e3)}},F=N;window.Lumberjack=F;})();
